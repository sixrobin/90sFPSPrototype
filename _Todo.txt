- Exporter la logique des options dans un manager (avec un préfixe de log plus propre du coup).
- Options:
	- Binder weapon switch.
	- Arme à droite ou à gauche.
	- Input maintenu pour crouch/sprint/visée.
	- Design crosshair/couleur (faire les designs dans Photoshop pour respecter le pixel size).
	- Si minimap:
		- Position/Size.
		- Static par rapport au joueur ou non.
	- Head bob: plutôt un pourcentage qu'un toggle.
		
- Changement visuel sur le switch des portes quand on/off.
- Permettre de tirer sur un switch ce qui l'active mais le rend inutilisable ensuite.
- Voir pour un feedback au niveau du switch qui ne peut donc plus gérer la porte.

- Contrôles manette.
- Occlusion culling.
- Ouverture de la grande porte avec 4 générateurs.

- IA (v1 débile à base de si raycast, chase, sinon, idle):
	- Exposer toutes les valeurs nécessaires (détection).
	- Senseurs pour les bruits de tir, valeurs de détection différentes si le joueur est crouched.
	- Plus tard : FSM.
	- Stocker la dernière position vue du player pour un chase, et si une fois arrivé à cette position, le player n'est plus vu, retour à l'idle.

- Night vision (transitions, grayscale, fog, UI).
- Outline qui ne traverse pas les meshes.

- Voir si moyen d'écrire un shader unlit à la con plus opti que celui de base ?

- Si projet prend de l'ampleur, faire une database xml.
- Accès rapide au FPSMaster (singleton ?) pour accéder à tous ses composantes.

- Doc de coding conventions.
- Tester si plusieurs training workshops fonctionnent (niveau event, terminal, etc.).
- Réfléchir à une façon de spawner les impacts sans dépendre du scale des parents potentiels.